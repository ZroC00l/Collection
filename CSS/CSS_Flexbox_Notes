INTRODUCTION TO CSS FLEXBOX
A Website typically consists of two components:
	1.Visual elements= this refers to the images, color and font elements
	2.positioning elements= this are the elements used in placing the visual elements

Flexbox is a new CSS feature only supported among the modern popular browsers. Flexbox is a layout container of some sort used for Dynamic User Interfaces.Flexbox arrranges the UI elements in such a way that the layout is represented well across the various devices and browsers used to access the content.

WORKING WITH THE DISPLAY PROPERTY

We have seen the display property used before when we did the CSS basics , it consisted of the inline property value used to manipulate the inline style of nav's list items. We go deeper into the display property by having a look at one of its property values called flex.
Adding a "display:flex" CSS property to an element allows you to have access to other flex properties to be able to build a responsive page.

Adding the CSS display:flex property turns the element on which its applied on to a flex container. This makes it possible to align children of the element in rows or columns using the "flex-direction" CSS property. The flex-direction property uses 4 property values:
	
	1.row= this is the default value of the property
	2.column
	3.row-reverse
	4.column reverse

using the CSS flex property for instance we would have a parent div container encapsulating 2 or more child div elements then for the styling property the parent container will be the only property that contains the "dispaly:flex and flex-direction" CSS properties.Its child elements will inherit whatever flex-direction property value is used if it row, then the child elements will be arranged in a row and if its a column,row-reverse or column-reverse then they will be arranged accordingly.

To understand the flex properties properly we look at a tweet embed that uses just html , you task will be to create a tweet embed that uses CSS display flex properties to emulate a real tweet embed.

WORKING WITH THE JUSTIFY-CONTENT PROPERTY

So far we have explored the flex property and its property values it offers, however there are certain points when developing your page , where you want to organise the flex items in the flex container to suit your needs."Justify-Content" CSS property provides us with the ability to structure flex items within the flex container to meet our visual needs. This property has the following values it can take:
	1.center: this will position the flex items to the middle of the page;
	2.flex-start: this aligns flex items to the start of the container.Take note if its a row it aligns the flex items from the left of the container, and if its a column it aligns the flex items to top of the container.
	3.flex-end: this aligns items to the end of the container. If its a row it aligns the flex items to the right of the container and if its a column it aligns the items to the bottom.
	4.space-between:aligns items to the center of the main axis, with extra space placed between the items. The first and last items are pushed to the very edge of the flex container.
	5.space-around:similar to space-between but the first and last items are not locked to the edges of the container, the space is distributed around all the items with a half space on either end of the flex container
	6.space-evenly:Distributes space evenly between the flex items with a full space at either end of the flex container

Another CSS property we can use to organize flex items inside of the flex container is the "align-items" property, take note align-items property is the same as the justify-content property , it also uses the following property values:
	
	1.flex-start
	2.flex-end
	3.center
	4.stretch: this will cause the flex items to fill up the flex container
	5.baseline:Baseline is a text concept, think of it as the line that the letters sit on.


FLEX-WRAP PROPERTY
CSS flexbox feature provides us with another property which can be used to manipulate flex items inside a container.Flex-wrap has the ability to split a flex item into multiple rows or columns, this ofcourse depends on the size of the container and flex items.
Flex-wrap uses the following wrap values:
		
		1.nowrap: this is the default setting of the wrap property and it doesnt wrap any elements;
		2.wrap: this wraps items from left-to-right if they are in a row or top-to-bottom if they are in a column
		3.wrap-reverse:this wraps elements from right-to-left if they are in a row and from bottom-to-top if they are in a column.
