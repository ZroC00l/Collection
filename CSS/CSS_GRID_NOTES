INTRODUCTION TO CSS GRID
CSS grid helps you to easily build complex web designs. IT works by turning an HTML element into
a grid container with rows and columns , were you can place your child elements wherever you want
within the container.

CREATING YOUR FIRST CSS GRID
To create your first css grid your you need to add the "display: grid" CSS property.Which means the
HTML element you wish you convert into a grid container should have the CSS "display:grid" style of
format.

ADD COLUMNS WITH GRID-TEMPLATE-COLUMNS
Simply adding the "display:grid" CSS property to an HTML element wont change anything that much.Y
You need to define the structure of the grid as well. We do so by enlisting the help of another CSS
property called "grid-template-columns".

This property works by adding columns to the grid container. Each parameter value of the property
represents a column and the actual number is the width of that column.The following is syntax for
defining a grid container with 3 columns. Note each column has been set to 100px width, each of the
100px represents a column.
    <style>
        .container{
            display:grid;
            grid-template-columns:100px 100px 100px;
        }
In addition to the grid-template-columns we also has the "grid-template-rows" which is used to define
the structure in a series of rows , like its counter part each property value represents a column and its
width.
GRID UNITS OF MEASURE
CSS grid provides us with units of measure we can use to adjust the sizes of the columns and rows.
They use either absolute or relative measures of unit.There following are measures of unit used in
modification of the column and row sizes:
    1.fr: sets the column or with to the fraction of the available space.
    2.auto: sets the column or row to fit the size of its content automatically.
    3.%: sets the column or row to a percent width of its container.

 The following is an example of creating a column 5 columns each with its specified size:

    grid-template-columns: auto 1fr 2fr 50px 50% auto;

-auto represents the first column and that column's size will be set to fit its content automatically
-1fr sets the second column to the specified fraction of the available space
-2fr sets the second column to the specified fraction of the available space
-50px sets the third column to a size of 50 pixels.
-50% sets the fourth column to 50 percent width of its container.
-auto sets the fifth column to automatically fit its content that its wrapped around.

GRID-ROW-GAP AND GRID-COLUMN-GAP PROPERTIES

we can create a space in between our columns through the use of the column-gap property, it uses px as
the measure of unit, the same applies for column-row when adding a gap.

We can also use the "grid-gap" which is a shorthand format for specifying grid-column-gap and grid-column-row.
By default if "grid-gap" has only one parameter value, then that value will represent the space created
in between the rows and columns. If the grid-gap property has two parameters the first one represents the
row spacing and the second the column spacing.

WORKING WITH GRID-COLUMN and GRID-ROW PROPERTIES
So far we have been working with the grid containers only and not with the items themselves.
"grid-column" is a CSS property that provides us with the ability to control the amount of columns an
item will consume. The grid consists of vertical and horizontal lines each numbered from the top left
hand corner of the grid, counting horizontally and vertically, these lines we use them to control the
line spacing between the columns."grid-row" is yer another grid property that allows us to manipulate
the line spacing between our rows , it works just like grid-column except it consumes the rows.

The following is an example of creating a column in a 3X3 grid that takes the last two columns of the
second row .

    grid-column: 2/4;
The following is an example of creating a row in a 3X3 grid that takes the last 2 rows of the grid
container.

    grid-row:2/4;


